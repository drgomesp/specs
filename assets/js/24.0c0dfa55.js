(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{292:function(t,e,n){"use strict";n.r(e);var a=n(13),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("!!!")]),t._v(" "),n("p",[t._v("This document has "),n("strong",[t._v("moved")]),t._v(".")]),t._v(" "),n("p",[t._v("You'll now find information like this in the "),n("a",{attrs:{href:"https://github.com/ipld/ipld/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ipld/ipld"),n("OutboundLink")],1),t._v(" meta-repo,\nand published to the web at https://ipld.io/ .")]),t._v(" "),n("p",[t._v("All documentation, fixtures, specifications, and web content is now gathered into that repo.\nPlease update your links, and direct new contributions there.")]),t._v(" "),n("p",[t._v("!!!")]),t._v(" "),n("hr"),t._v(" "),n("h1",{attrs:{id:"concept-serialization-and-formats"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#concept-serialization-and-formats"}},[t._v("#")]),t._v(" Concept: Serialization and Formats")]),t._v(" "),n("p",[t._v("A logical separation exists in any given IPLD codec between the "),n("strong",[t._v("format")]),t._v(" and the "),n("strong",[t._v("serializer/deserializer")]),t._v(".")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("┌────────────────────┐             ┌────────────────────┐\n│                    │             │                    │\n│     Serializer     │             │    Deserializer    │\n│                    │             │                    │\n└─────────┬──────────┘             └──────────^─────────┘\n          │                                   │\n          │         Sent to another peer      │\n          │                                   │\n┌─────────v──────────┐             ┌──────────┴─────────┐\n│                    │             │                    │\n│       Format       ├─────────────>       Format       │\n│                    │             │                    │\n└────────────────────┘             └────────────────────┘\n")])])]),n("p",[t._v("A "),n("strong",[t._v("format")]),t._v(" may represent object types and tree structures any way it wishes.\nThis includes existing representations (JSON, BSON, CBOR, Protobuf, msgpack, etc) or even new custom serializations.")]),t._v(" "),n("p",[t._v("Therefor, a "),n("strong",[t._v("format")]),t._v(" is the standardized representation of IPLD Links and Paths.\nIt describes how to translate between structured data and binary.")]),t._v(" "),n("p",[t._v("It is worth noting that "),n("strong",[t._v("serializers")]),t._v(" and "),n("strong",[t._v("deserializers")]),t._v(" differ by programming language while the "),n("strong",[t._v("format")]),t._v(" does not and MUST remain consistent across all codec implementations.")])])}),[],!1,null,null,null);e.default=r.exports}}]);
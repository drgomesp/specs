(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{306:function(t,e,s){"use strict";s.r(e);var a=s(13),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("!!!")]),t._v(" "),s("p",[t._v("This document has "),s("strong",[t._v("moved")]),t._v(".")]),t._v(" "),s("p",[t._v("You'll now find information like this in the "),s("a",{attrs:{href:"https://github.com/ipld/ipld/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ipld/ipld"),s("OutboundLink")],1),t._v(" meta-repo,\nand published to the web at https://ipld.io/ .")]),t._v(" "),s("p",[t._v("All documentation, fixtures, specifications, and web content is now gathered into that repo.\nPlease update your links, and direct new contributions there.")]),t._v(" "),s("p",[t._v("!!!")]),t._v(" "),s("hr"),t._v(" "),s("h1",{attrs:{id:"filecoin-main-chain-data-structures"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#filecoin-main-chain-data-structures"}},[t._v("#")]),t._v(" Filecoin Main Chain Data Structures")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#genesis-block"}},[t._v("Genesis Block")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#chain"}},[t._v("Chain")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#messages"}},[t._v("Messages")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#actors"}},[t._v("Actors")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#actor-type-linking"}},[t._v("Actor type linking")])])])])]),t._v(" "),s("h2",{attrs:{id:"genesis-block"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#genesis-block"}},[t._v("#")]),t._v(" Genesis Block")]),t._v(" "),s("p",[t._v("There is a single block at the base of the entire chain with this layout. It is\nthe only structure that uses an actual Map at the representation level (other\nstructs use the "),s("code",[t._v("tuple")]),t._v(" representation which encodes them as Lists). It is\nencoded with DAG-CBOR with a SHA2-256 which gives the CID:\n"),s("code",[t._v("bafyreiaqpwbbyjo4a42saasj36kkrpv4tsherf2e7bvezkert2a7dhonoi")]),t._v(".")]),t._v(" "),s("p",[t._v("This block is not referenced as height "),s("code",[t._v("0")]),t._v(" as this is reserved for the first\n"),s("code",[t._v("BlockHeader")]),t._v(" block which carries the initial state (see below). This block\nlinks Filecoin to the Ethereum chain.")]),t._v(" "),s("p",[t._v("Note that this block does not conform to strict DAG-CBOR in that its Map keys\nare not sorted according to canonical rules. Therefore it does not round-trip\ncleanly through current DAG-CBOR codecs, although current codecs are able to\ndecode it.")]),t._v(" "),s("div",{staticClass:"language-ipldsch extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ipldsch"}},[s("code",[s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Genesis")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Datetime String\n  Network String\n  Token String\n  TokenAmounts TokenAmounts\n  Message String\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TokenAmounts")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  TotalSupply String\n  Miners String\n  ProtocolLabs "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"chain"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chain"}},[t._v("#")]),t._v(" Chain")]),t._v(" "),s("p",[s("code",[t._v("TipSetKey")]),t._v(" is the type for linking to the parent "),s("code",[t._v("BlockHeader")]),t._v("s. It is\nimportant to note that its type hint, of referring to only "),s("code",[t._v("BlockHeader")]),t._v(" blocks,\ndoes not hold true at chain height "),s("strong",[s("code",[t._v("0")])]),t._v(" (CID\n"),s("code",[t._v("bafy2bzacecnamqgqmifpluoeldx7zzglxcljo6oja4vrmtj7432rphldpdmm2")]),t._v("). This block\ncontains a single parent CID referring to the "),s("code",[t._v("Genesis")]),t._v(" (above, CID\n"),s("code",[t._v("bafyreiaqpwbbyjo4a42saasj36kkrpv4tsherf2e7bvezkert2a7dhonoi")]),t._v(").")]),t._v(" "),s("div",{staticClass:"language-ipldsch extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ipldsch"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The `ParentStateRoot` link will point either directly to `ActorsHAMT' for v0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or `StateRoot` which links to `ActorsHAMT` for v2.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# See Lotus chain/state/LoadStateTree()")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StateRootLink")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("&")]),t._v("Any\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# See note above about the single case where this type hint does not hold true.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TipSetKey")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("&")]),t._v("BlockHeader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BlockHeader")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Miner Address\n  Ticket "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullable")]),t._v(" Ticket\n  ElectionProof "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullable")]),t._v(" ElectionProof\n  BeaconEntries "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("BeaconEntry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  WinPoStProof "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("PoStProof"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  Parents TipSetKey\n  ParentWeight Bytes\n  Height ChainEpoch\n  ParentStateRoot StateRootLink\n  ParentMessageReceipts "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("&")]),t._v("MessageReceiptAMT\n  Messages "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("&")]),t._v("TxMeta\n  BLSAggregate "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullable")]),t._v(" Signature\n  Timestamp Int\n  BlockSig "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullable")]),t._v(" Signature\n  ForkSignaling Int\n  ParentBaseFee TokenAmount\n"),s("span",{pre:!0,attrs:{class:"token representation"}},[t._v("} "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("representation")])]),t._v(" tuple\n\n"),s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Ticket")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  VRFProof Bytes\n"),s("span",{pre:!0,attrs:{class:"token representation"}},[t._v("} "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("representation")])]),t._v(" tuple\n\n"),s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ElectionProof")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  WinCount Int\n  VRFProof Bytes\n"),s("span",{pre:!0,attrs:{class:"token representation"}},[t._v("} "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("representation")])]),t._v(" tuple\n\n"),s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeaconEntry")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Round Int\n  Data Bytes\n"),s("span",{pre:!0,attrs:{class:"token representation"}},[t._v("} "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("representation")])]),t._v(" tuple\n\n"),s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PoStProof")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  PoStProof Int\n  ProofBytes Bytes\n"),s("span",{pre:!0,attrs:{class:"token representation"}},[t._v("} "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("representation")])]),t._v(" tuple\n")])])]),s("p",[s("strong",[t._v("AMT")]),t._v(": This is an ADL representing "),s("code",[t._v("type MessageReceiptList [MessageReceipt]")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-ipldsch extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ipldsch"}},[s("code",[s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageReceiptAMT")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  height Int\n  count Int\n  node MessageReceiptAMTNode\n"),s("span",{pre:!0,attrs:{class:"token representation"}},[t._v("} "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("representation")])]),t._v(" tuple\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This can also be the root of a block")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageReceiptAMTNode")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  bitmap Bytes\n  children "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("&")]),t._v("MessageReceiptAMTNode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  values "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("&")]),t._v("Message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token representation"}},[t._v("} "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("representation")])]),t._v(" tuple\n\n"),s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageReceipt")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ExitCode ExitCode\n  Return   CborEncodedReturn\n  GasUsed  Int\n"),s("span",{pre:!0,attrs:{class:"token representation"}},[t._v("} "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("representation")])]),t._v(" tuple\n")])])]),s("div",{staticClass:"language-ipldsch extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ipldsch"}},[s("code",[s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StateRoot")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Version Int\n  Actors "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("&")]),t._v("ActorsHAMT\n  Info "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("&")]),t._v("StateInfo\n"),s("span",{pre:!0,attrs:{class:"token representation"}},[t._v("} "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("representation")])]),t._v(" tuple\n")])])]),s("p",[t._v("Note that "),s("code",[t._v("StateInfo")]),t._v(" is an "),s("a",{attrs:{href:"https://github.com/filecoin-project/lotus/blob/f225b7b928de73e20dd8b8d4d075a56fbf3b8a25/chain/types/state.go#L26",target:"_blank",rel:"noopener noreferrer"}},[t._v("empty struct"),s("OutboundLink")],1),t._v(", which encodes as an empty CBOR array ("),s("code",[t._v("0x80")]),t._v(").")]),t._v(" "),s("div",{staticClass:"language-ipldsch extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ipldsch"}},[s("code",[s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StateInfo")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token representation"}},[t._v("} "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("representation")])]),t._v(" tuple\n")])])]),s("h2",{attrs:{id:"messages"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#messages"}},[t._v("#")]),t._v(" Messages")]),t._v(" "),s("p",[t._v("See "),s("strong",[s("RouterLink",{attrs:{to:"/data-structures/filecoin/messages.html"}},[t._v("Filecoin Messages Data Structures")])],1),t._v(" for details on the CBOR encoded message "),s("code",[t._v("Params")]),t._v(" and message returns.")]),t._v(" "),s("div",{staticClass:"language-ipldsch extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ipldsch"}},[s("code",[s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TxMeta")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  BlsMessages "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("&")]),t._v("MessageLinkAMT\n  SecpkMessages "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("&")]),t._v("SignedMessageLinkAMT\n"),s("span",{pre:!0,attrs:{class:"token representation"}},[t._v("} "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("representation")])]),t._v(" tuple\n")])])]),s("div",{staticClass:"language-ipldsch extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ipldsch"}},[s("code",[s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Message")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Version Int\n  To Address\n  From Address\n  Nonce Int\n  Value BigInt\n  GasLimit Int\n  GasFeeCap BigInt\n  GasPremium BigInt\n  Method MethodNum\n  Params CborEncodedParams\n"),s("span",{pre:!0,attrs:{class:"token representation"}},[t._v("} "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("representation")])]),t._v(" tuple\n\n"),s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SignedMessage")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Message Message\n  Signature Signature\n"),s("span",{pre:!0,attrs:{class:"token representation"}},[t._v("} "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("representation")])]),t._v(" tuple\n")])])]),s("p",[s("strong",[t._v("AMT")]),t._v(": This is an ADL representing "),s("code",[t._v("type MessagesList [&Message]")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-ipldsch extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ipldsch"}},[s("code",[s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageLinkAMT")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  height Int\n  count Int\n  node MessageLinkAMTNode\n"),s("span",{pre:!0,attrs:{class:"token representation"}},[t._v("} "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("representation")])]),t._v(" tuple\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This can also be the root of a block")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageLinkAMTNode")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  bitmap Bytes\n  children "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("&")]),t._v("MessageLinkAMTNode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  values "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("&")]),t._v("Message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token representation"}},[t._v("} "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("representation")])]),t._v(" tuple\n")])])]),s("p",[s("strong",[t._v("AMT")]),t._v(": This is an ADL representing "),s("code",[t._v("type SignedMessagesList [&SignedMessage]")]),t._v(".")]),t._v(" "),s("p",[t._v("Note this is identical in layout to "),s("code",[t._v("MessagesList")]),t._v(" and contains links at the leaves, but is listed here for completeness.")]),t._v(" "),s("div",{staticClass:"language-ipldsch extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ipldsch"}},[s("code",[s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SignedMessageLinkAMT")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  height Int\n  count Int\n  node SignedMessageLinkAMTNode\n"),s("span",{pre:!0,attrs:{class:"token representation"}},[t._v("} "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("representation")])]),t._v(" tuple\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This can also be the root of a block")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SignedMessageLinkAMTNode")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  bitmap Bytes\n  children "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("&")]),t._v("SignedMessageLinkAMTNode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  values "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("&")]),t._v("SignedMessage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token representation"}},[t._v("} "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("representation")])]),t._v(" tuple\n")])])]),s("h2",{attrs:{id:"actors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#actors"}},[t._v("#")]),t._v(" Actors")]),t._v(" "),s("p",[t._v("See "),s("strong",[s("RouterLink",{attrs:{to:"/data-structures/filecoin/state.html"}},[t._v("Filecoin Actor State Data Structures")])],1),t._v(" for details on the Actor State objects that attach to the state tree "),s("code",[t._v("ActorsHAMT")]),t._v(" as "),s("code",[t._v("ActorStateLink")]),t._v(" and are differentiated by the type "),s("code",[t._v("Code")]),t._v(" described below.")]),t._v(" "),s("h3",{attrs:{id:"actor-type-linking"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#actor-type-linking"}},[t._v("#")]),t._v(" Actor type linking")]),t._v(" "),s("p",[t._v("Actors are identified by a Code which is represented as a CID. The current form\nuses a "),s("code",[t._v("raw")]),t._v(" codec combined with an "),s("code",[t._v("identity")]),t._v(" multihash to encode a set of\nfixed strings uniquely representing the Actor type. Version 0 Actors use the\nprefix "),s("code",[t._v("fil/1/")]),t._v(" while version 2 Actors use the prefix "),s("code",[t._v("fil/2/")]),t._v(", followed by the\nActor name.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("code")]),t._v(" field in the "),s("code",[t._v("Actor")]),t._v(" struct contains this CID and indicates the type\nof block to be found when following the "),s("code",[t._v("head")]),t._v(" link to load the specific Actor\nstate.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Code string")]),t._v(" "),s("th",[t._v("Actor state type")]),t._v(" "),s("th",[t._v("CID")]),t._v(" "),s("th",[t._v("CID Bytes")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v('"fil/1/init"')])]),t._v(" "),s("td",[s("a",{attrs:{href:"#initv0state"}},[s("code",[t._v("InitV0State")])])]),t._v(" "),s("td",[s("code",[t._v("bafkqactgnfwc6mjpnfxgs5a")])]),t._v(" "),s("td",[s("code",[t._v("0x0155000a66696c2f312f696e6974")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('"fil/2/init"')])]),t._v(" "),s("td",[s("a",{attrs:{href:"#initv2state"}},[s("code",[t._v("InitV2State")])])]),t._v(" "),s("td",[s("code",[t._v("bafkqactgnfwc6mrpnfxgs5a")])]),t._v(" "),s("td",[s("code",[t._v("0x0155000a66696c2f322f696e6974")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('"fil/1/cron"')])]),t._v(" "),s("td",[s("a",{attrs:{href:"#cronv0state"}},[s("code",[t._v("CronV0State")])])]),t._v(" "),s("td",[s("code",[t._v("bafkqactgnfwc6mjpmnzg63q")])]),t._v(" "),s("td",[s("code",[t._v("0x0155000a66696c2f312f63726f6e")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('"fil/2/cron"')])]),t._v(" "),s("td",[s("a",{attrs:{href:"#cronv2state"}},[s("code",[t._v("CronV2State")])])]),t._v(" "),s("td",[s("code",[t._v("bafkqactgnfwc6mrpmnzg63q")])]),t._v(" "),s("td",[s("code",[t._v("0x0155000a66696c2f322f63726f6e")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('"fil/1/reward"')])]),t._v(" "),s("td",[s("a",{attrs:{href:"#rewardv0state"}},[s("code",[t._v("RewardV0State")])])]),t._v(" "),s("td",[s("code",[t._v("bafkqaddgnfwc6mjpojsxoylsmq")])]),t._v(" "),s("td",[s("code",[t._v("0x0155000c66696c2f312f726577617264")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('"fil/2/reward"')])]),t._v(" "),s("td",[s("a",{attrs:{href:"#rewardv2state"}},[s("code",[t._v("RewardV2State")])])]),t._v(" "),s("td",[s("code",[t._v("bafkqaddgnfwc6mrpojsxoylsmq")])]),t._v(" "),s("td",[s("code",[t._v("0x0155000c66696c2f322f726577617264")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('"fil/1/account"')])]),t._v(" "),s("td",[s("a",{attrs:{href:"#accountv0state"}},[s("code",[t._v("AccountV0State")])])]),t._v(" "),s("td",[s("code",[t._v("bafkqadlgnfwc6mjpmfrwg33vnz2a")])]),t._v(" "),s("td",[s("code",[t._v("0x0155000d66696c2f312f6163636f756e74")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('"fil/2/account"')])]),t._v(" "),s("td",[s("a",{attrs:{href:"#accountv2state"}},[s("code",[t._v("AccountV2State")])])]),t._v(" "),s("td",[s("code",[t._v("bafkqadlgnfwc6mrpmfrwg33vnz2a")])]),t._v(" "),s("td",[s("code",[t._v("0x0155000d66696c2f322f6163636f756e74")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('"fil/1/storagemarket"')])]),t._v(" "),s("td",[s("a",{attrs:{href:"#marketv0state"}},[s("code",[t._v("MarketV0State")])])]),t._v(" "),s("td",[s("code",[t._v("bafkqae3gnfwc6mjpon2g64tbm5sw2ylsnnsxi")])]),t._v(" "),s("td",[s("code",[t._v("0x0155001366696c2f312f73746f726167656d61726b6574")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('"fil/2/storagemarket"')])]),t._v(" "),s("td",[s("a",{attrs:{href:"#marketv2state"}},[s("code",[t._v("MarketV2State")])])]),t._v(" "),s("td",[s("code",[t._v("bafkqae3gnfwc6mrpon2g64tbm5sw2ylsnnsxi")])]),t._v(" "),s("td",[s("code",[t._v("0x0155001366696c2f322f73746f726167656d61726b6574")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('"fil/1/storageminer"')])]),t._v(" "),s("td",[s("a",{attrs:{href:"#minerv0state"}},[s("code",[t._v("MinerV0State")])])]),t._v(" "),s("td",[s("code",[t._v("bafkqaetgnfwc6mjpon2g64tbm5sw22lomvza")])]),t._v(" "),s("td",[s("code",[t._v("0x0155001266696c2f312f73746f726167656d696e6572")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('"fil/2/storageminer"')])]),t._v(" "),s("td",[s("a",{attrs:{href:"#minerv2state"}},[s("code",[t._v("MinerV2State")])])]),t._v(" "),s("td",[s("code",[t._v("bafkqaetgnfwc6mrpon2g64tbm5sw22lomvza")])]),t._v(" "),s("td",[s("code",[t._v("0x0155001266696c2f322f73746f726167656d696e6572")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('"fil/1/multisig"')])]),t._v(" "),s("td",[s("a",{attrs:{href:"#multisigv0state"}},[s("code",[t._v("MultisigV0State")])])]),t._v(" "),s("td",[s("code",[t._v("bafkqadtgnfwc6mjpnv2wy5djonuwo")])]),t._v(" "),s("td",[s("code",[t._v("0x0155000e66696c2f312f6d756c7469736967")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('"fil/2/multisig"')])]),t._v(" "),s("td",[s("a",{attrs:{href:"#multisigv2state"}},[s("code",[t._v("MultisigV2State")])])]),t._v(" "),s("td",[s("code",[t._v("bafkqadtgnfwc6mrpnv2wy5djonuwo")])]),t._v(" "),s("td",[s("code",[t._v("0x0155000e66696c2f322f6d756c7469736967")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('"fil/1/paymentchannel"')])]),t._v(" "),s("td",[s("a",{attrs:{href:"#paychv0state"}},[s("code",[t._v("PaychV0State")])])]),t._v(" "),s("td",[s("code",[t._v("bafkqafdgnfwc6mjpobqxs3lfnz2gg2dbnzxgk3a")])]),t._v(" "),s("td",[s("code",[t._v("0x0155001466696c2f312f7061796d656e746368616e6e656c")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('"fil/2/paymentchannel"')])]),t._v(" "),s("td",[s("a",{attrs:{href:"#paychv2state"}},[s("code",[t._v("PaychV2State")])])]),t._v(" "),s("td",[s("code",[t._v("bafkqafdgnfwc6mrpobqxs3lfnz2gg2dbnzxgk3a")])]),t._v(" "),s("td",[s("code",[t._v("0x0155001466696c2f322f7061796d656e746368616e6e656c")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('"fil/1/storagepower"')])]),t._v(" "),s("td",[s("a",{attrs:{href:"#powerv0state"}},[s("code",[t._v("PowerV0State")])])]),t._v(" "),s("td",[s("code",[t._v("bafkqaetgnfwc6mjpon2g64tbm5sxa33xmvza")])]),t._v(" "),s("td",[s("code",[t._v("0x0155001266696c2f312f73746f72616765706f776572")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('"fil/2/storagepower"')])]),t._v(" "),s("td",[s("a",{attrs:{href:"#powerv2state"}},[s("code",[t._v("PowerV2State")])])]),t._v(" "),s("td",[s("code",[t._v("bafkqaetgnfwc6mrpon2g64tbm5sxa33xmvza")])]),t._v(" "),s("td",[s("code",[t._v("0x0155001266696c2f322f73746f72616765706f776572")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('"fil/1/verifiedregistry"')])]),t._v(" "),s("td",[s("a",{attrs:{href:"#verifregv0state"}},[s("code",[t._v("VerifregV0State")])])]),t._v(" "),s("td",[s("code",[t._v("bafkqaftgnfwc6mjpozsxe2lgnfswi4tfm5uxg5dspe")])]),t._v(" "),s("td",[s("code",[t._v("0x0155001666696c2f312f76657269666965647265676973747279")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('"fil/2/verifiedregistry"')])]),t._v(" "),s("td",[s("a",{attrs:{href:"#verifregv2state"}},[s("code",[t._v("VerifregV2State")])])]),t._v(" "),s("td",[s("code",[t._v("bafkqaftgnfwc6mrpozsxe2lgnfswi4tfm5uxg5dspe")])]),t._v(" "),s("td",[s("code",[t._v("0x0155001666696c2f322f76657269666965647265676973747279")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('"fil/1/system"')])]),t._v(" "),s("td",[s("a",{attrs:{href:"#systemv0state"}},[s("code",[t._v("SystemV0State")])])]),t._v(" "),s("td",[s("code",[t._v("bafkqaddgnfwc6mjpon4xg5dfnu")])]),t._v(" "),s("td",[s("code",[t._v("0x0155000c66696c2f312f73797374656d")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('"fil/2/system"')])]),t._v(" "),s("td",[s("a",{attrs:{href:"#systemv2state"}},[s("code",[t._v("SystemV2State")])])]),t._v(" "),s("td",[s("code",[t._v("bafkqaddgnfwc6mrpon4xg5dfnu")])]),t._v(" "),s("td",[s("code",[t._v("0x0155000c66696c2f322f73797374656d")])])])])]),t._v(" "),s("p",[s("strong",[t._v("HAMT")]),t._v(": This is an ADL representing "),s("code",[t._v("type ActorsMap {Address:Actors}")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-ipldsch extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ipldsch"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# An inline CID encoded as raw+identity, see above")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ActorCode")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("&")]),t._v("Any\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# An implicit union of each actor state types, keyed by the `ActorCode` (`code`)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# field and its variations listed above")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ActorStateLink")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("&")]),t._v("Any\n\n"),s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ActorsHAMT")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  map Bytes\n  data "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" ActorsHAMTElement "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token representation"}},[t._v("} "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("representation")])]),t._v(" tuple\n\n"),s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ActorsHAMTElement")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("union")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" ActorsHAMTLink "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" ActorsHAMTBucket "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token representation"}},[t._v("} "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("representation")])]),t._v(" keyed\n\n"),s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ActorsHAMTLink")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("&")]),t._v("ActorsHAMT\n\n"),s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ActorsHAMTBucket")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" ActorsHAMTBucketEntry "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ActorsHAMTBucketEntry")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  key Address\n  value Actor "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# inline")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token representation"}},[t._v("} "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("representation")])]),t._v(" tuple\n\n"),s("span",{pre:!0,attrs:{class:"token typedef"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Actor")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  code ActorCode\n  head ActorStateLink\n  nonce CallSeqNum\n  balance BigInt\n"),s("span",{pre:!0,attrs:{class:"token representation"}},[t._v("} "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("representation")])]),t._v(" tuple\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);
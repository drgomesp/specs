(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{309:function(e,t,n){"use strict";n.r(t);var a=n(13),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("!!!")]),e._v(" "),n("p",[e._v("This document has "),n("strong",[e._v("moved")]),e._v(".")]),e._v(" "),n("p",[e._v("You'll now find information like this in the "),n("a",{attrs:{href:"https://github.com/ipld/ipld/",target:"_blank",rel:"noopener noreferrer"}},[e._v("ipld/ipld"),n("OutboundLink")],1),e._v(" meta-repo,\nand published to the web at https://ipld.io/ .")]),e._v(" "),n("p",[e._v("All documentation, fixtures, specifications, and web content is now gathered into that repo.\nPlease update your links, and direct new contributions there.")]),e._v(" "),n("p",[e._v("!!!")]),e._v(" "),n("hr"),e._v(" "),n("h1",{attrs:{id:"specification-flexible-byte-layout"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#specification-flexible-byte-layout"}},[e._v("#")]),e._v(" Specification: Flexible Byte Layout")]),e._v(" "),n("p",[n("strong",[e._v("Status: Prescriptive - Draft")])]),e._v(" "),n("p",[n("code",[e._v("Flexible Byte Layout")]),e._v(" is an advanced layout for representing binary data.")]),e._v(" "),n("p",[e._v("It is flexible enough to support very small and very large (multi-block) binary data.")]),e._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("type")]),e._v(" FlexibleByteLayout union "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" Bytes bytes\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" NestedByteList list\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),e._v("FlexibleByteLayout "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("link")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" representation kinded\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("type")]),e._v(" NestedByteList "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" NestedByte "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("type")]),e._v(" NestedByte union "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" Bytes bytes\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" NestedFBL list\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" representation kinded\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("type")]),e._v(" NestedFBL struct "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  length Int\n  part FlexibleByteLayout\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" representation tuple\n")])])]),n("p",[n("code",[e._v("FlexibleByteLayout")]),e._v(" is the entrypoint/root of the data structure and uses a potentially recursive\nunion type. This allows you to build very large nested dags via "),n("code",[e._v("NestedByteList")]),e._v(" that can themselves\ncontain additional "),n("code",[e._v("NestedByteList")]),e._v("s or actual "),n("code",[e._v("Bytes")]),e._v(" (via Links to "),n("code",[e._v("FlexibleByteLayout")]),e._v(" in "),n("code",[e._v("NestedByte")]),e._v(").")]),e._v(" "),n("p",[e._v("An implementation must define a custom function for reading ranges of binary\ndata but once implemented, you can read data regardless of the layout algorithm used.")]),e._v(" "),n("p",[e._v("Since readers only need to concern themselves with implementing the read method, they "),n("strong",[e._v("do not")]),e._v("\nneed to understand the algorithms used to generate the layouts. This gives a lot of flexibility\nin the future to define new layout algorithms as necessary without needing to worry about\nupdating prior implementations.")]),e._v(" "),n("p",[e._v("The "),n("code",[e._v("length")]),e._v(" property must be encoded with the proper byte length. If not encoded properly, readers\nwill not be able to read properly. However, the property is "),n("strong",[e._v("not secure")]),e._v(" and a malicious encoder\ncould write it as whatever they please. As such, it should not be relied upon when calculating usage\nagainst a quota or any similar calculation where there may be an incentive for an encoder to alter the\nlength.")])])}),[],!1,null,null,null);t.default=s.exports}}]);
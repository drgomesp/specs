(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{281:function(t,e,o){"use strict";o.r(e);var n=o(13),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("p",[t._v("!!!")]),t._v(" "),o("p",[t._v("This document has "),o("strong",[t._v("moved")]),t._v(".")]),t._v(" "),o("p",[t._v("You'll now find information like this in the "),o("a",{attrs:{href:"https://github.com/ipld/ipld/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ipld/ipld"),o("OutboundLink")],1),t._v(" meta-repo,\nand published to the web at https://ipld.io/ .")]),t._v(" "),o("p",[t._v("All documentation, fixtures, specifications, and web content is now gathered into that repo.\nPlease update your links, and direct new contributions there.")]),t._v(" "),o("p",[t._v("!!!")]),t._v(" "),o("hr"),t._v(" "),o("h1",{attrs:{id:"ipld-codecs"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#ipld-codecs"}},[t._v("#")]),t._v(" IPLD Codecs")]),t._v(" "),o("p",[t._v("A codec exposes serialization and deserialization for IPLD blocks.\nIf it also supports content addressable links then the codec exposes those links as CIDs.\nA codec also supports atomic IPLD Path lookups on the block.")])])}),[],!1,null,null,null);e.default=s.exports}}]);